(base) [01;32mjaekyungcho@ubuntu[00m:[01;34m~/UMD/sim-to-real-TD3[00m$ conda activate crazyflie
(crazyflie) [01;32mjaekyungcho@ubuntu[00m:[01;34m~/UMD/sim-to-real-TD3[00m$ python train_td3.py --env takeoff-aviary-v0 --randomize  [K--tb_log --r nn RNNHER --gpu 3 --[K[K--lr_scheduler
pybullet build time: Apr 24 2022 23:58:36
hyperparam set: {'q_lr': 0.0003, 'policy_lr': 3e-05, 'param_lr': 3e-05, 't_max': 50000, 'hidden_dim': 128, 'update_interval': 3, 'lr_scheduler': True}
[Tensorboard log]: tb_log/takeoff-aviary-v0/TD3/randomize/RNNHER/22May13083119
Device: cuda:3
/home/jaekyungcho/anaconda3/envs/crazyflie/lib/python3.7/site-packages/gym/logger.py:34: UserWarning: [33mWARN: Box bound precision lowered by casting to float32[0m
  warnings.warn(colorize("%s: %s" % ("WARN", msg % args), "yellow"))
/home/jaekyungcho/anaconda3/envs/crazyflie/lib/python3.7/site-packages/numpy/core/shape_base.py:420: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  arrays = [asanyarray(arr) for arr in arrays]
/home/jaekyungcho/UMD/gym-pybullet-drones/gym_pybullet_drones/envs/BaseAviary.py:733: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  physicsClientId=self.CLIENT
/home/jaekyungcho/UMD/gym-pybullet-drones/gym_pybullet_drones/envs/BaseAviary.py:733: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  physicsClientId=self.CLIENT
/home/jaekyungcho/anaconda3/envs/crazyflie/lib/python3.7/site-packages/numpy/core/fromnumeric.py:3441: RuntimeWarning: Mean of empty slice.
  out=out, **kwargs)
/home/jaekyungcho/anaconda3/envs/crazyflie/lib/python3.7/site-packages/numpy/core/_methods.py:189: RuntimeWarning: invalid value encountered in double_scalars
  ret = ret.dtype.type(ret / rcount)
/home/jaekyungcho/anaconda3/envs/crazyflie/lib/python3.7/site-packages/torch/nn/functional.py:1795: UserWarning: nn.functional.tanh is deprecated. Use torch.tanh instead.
  warnings.warn("nn.functional.tanh is deprecated. Use torch.tanh instead.")
/home/jaekyungcho/UMD/gym-pybullet-drones/gym_pybullet_drones/envs/BaseAviary.py:733: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  physicsClientId=self.CLIENT
Episode 500	Average Score: -89.78
Episode 1000	Average Score: -18.20
^CProcess Process-1:
Process Process-2:
Traceback (most recent call last):
  File "/home/jaekyungcho/anaconda3/envs/crazyflie/lib/python3.7/multiprocessing/process.py", line 297, in _bootstrap
    self.run()
  File "/home/jaekyungcho/anaconda3/envs/crazyflie/lib/python3.7/multiprocessing/process.py", line 99, in run
    self._target(*self._args, **self._kwargs)
  File "/home/jaekyungcho/UMD/sim-to-real-TD3/envs/customEnv.py", line 238, in workerDomainRand
    cmd, data = remote.recv()
  File "/home/jaekyungcho/anaconda3/envs/crazyflie/lib/python3.7/multiprocessing/connection.py", line 250, in recv
    buf = self._recv_bytes()
  File "/home/jaekyungcho/anaconda3/envs/crazyflie/lib/python3.7/multiprocessing/connection.py", line 407, in _recv_bytes
    buf = self._recv(4)
  File "/home/jaekyungcho/anaconda3/envs/crazyflie/lib/python3.7/multiprocessing/connection.py", line 379, in _recv
    chunk = read(handle, remaining)
KeyboardInterrupt
Traceback (most recent call last):
  File "/home/jaekyungcho/anaconda3/envs/crazyflie/lib/python3.7/multiprocessing/process.py", line 297, in _bootstrap
    self.run()
  File "/home/jaekyungcho/anaconda3/envs/crazyflie/lib/python3.7/multiprocessing/process.py", line 99, in run
    self._target(*self._args, **self._kwargs)
  File "/home/jaekyungcho/UMD/sim-to-real-TD3/envs/customEnv.py", line 238, in workerDomainRand
    cmd, data = remote.recv()
  File "/home/jaekyungcho/anaconda3/envs/crazyflie/lib/python3.7/multiprocessing/connection.py", line 250, in recv
    buf = self._recv_bytes()
  File "/home/jaekyungcho/anaconda3/envs/crazyflie/lib/python3.7/multiprocessing/connection.py", line 407, in _recv_bytes
    buf = self._recv(4)
  File "/home/jaekyungcho/anaconda3/envs/crazyflie/lib/python3.7/multiprocessing/connection.py", line 379, in _recv
    chunk = read(handle, remaining)
KeyboardInterrupt
Traceback (most recent call last):
  File "train_td3.py", line 636, in <module>
    train(args, hparam)
  File "train_td3.py", line 332, in train
    loss_dict = td3_trainer.update(batch_size, deterministic=DETERMINISTIC, eval_noise_scale=eval_noise_scale)
  File "/home/jaekyungcho/UMD/sim-to-real-TD3/td3/td3.py", line 617, in update
    new_action, hidden_out, hidden_all, *_= self.policy_net.evaluate(state, last_action, hidden_in, goal, deterministic, eval_noise_scale=0.0)  # no noise, deterministic policy gradients
  File "/home/jaekyungcho/UMD/sim-to-real-TD3/td3/common/policy_networks.py", line 317, in evaluate
    mean, std, hidden_out, hidden_all = self.forward(state, last_action, hidden_in, goal)
  File "/home/jaekyungcho/UMD/sim-to-real-TD3/td3/common/policy_networks.py", line 294, in forward
    rnn_out, rnn_hidden = self.rnn(rnn_x, hidden_in)
  File "/home/jaekyungcho/anaconda3/envs/crazyflie/lib/python3.7/site-packages/torch/nn/modules/module.py", line 1102, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/jaekyungcho/anaconda3/envs/crazyflie/lib/python3.7/site-packages/torch/nn/modules/rnn.py", line 269, in forward
    self.dropout, self.training, self.bidirectional, self.batch_first)
KeyboardInterrupt
^[[A
(crazyflie) [01;32mjaekyungcho@ubuntu[00m:[01;34m~/UMD/sim-to-real-TD3[00m$ python train_td3.py --env takeoff-aviary-v0 --randomize --tb_log --rrnn RNNHER --gpu 3 --lr_scheduler
pybullet build time: Apr 24 2022 23:58:36
hyperparam set: {'q_lr': 0.0003, 'policy_lr': 3e-05, 'param_lr': 3e-05, 't_max': 50000, 'hidden_dim': 128, 'update_interval': 3, 'lr_scheduler': True}
[Tensorboard log]: tb_log/takeoff-aviary-v0/TD3/randomize/RNNHER/22May13122913
Device: cuda:3
/home/jaekyungcho/anaconda3/envs/crazyflie/lib/python3.7/site-packages/gym/logger.py:34: UserWarning: [33mWARN: Box bound precision lowered by casting to float32[0m
  warnings.warn(colorize("%s: %s" % ("WARN", msg % args), "yellow"))
/home/jaekyungcho/anaconda3/envs/crazyflie/lib/python3.7/site-packages/numpy/core/shape_base.py:420: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  arrays = [asanyarray(arr) for arr in arrays]
/home/jaekyungcho/UMD/gym-pybullet-drones/gym_pybullet_drones/envs/BaseAviary.py:733: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  physicsClientId=self.CLIENT
/home/jaekyungcho/UMD/gym-pybullet-drones/gym_pybullet_drones/envs/BaseAviary.py:733: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  physicsClientId=self.CLIENT
/home/jaekyungcho/anaconda3/envs/crazyflie/lib/python3.7/site-packages/numpy/core/fromnumeric.py:3441: RuntimeWarning: Mean of empty slice.
  out=out, **kwargs)
/home/jaekyungcho/anaconda3/envs/crazyflie/lib/python3.7/site-packages/numpy/core/_methods.py:189: RuntimeWarning: invalid value encountered in double_scalars
  ret = ret.dtype.type(ret / rcount)
/home/jaekyungcho/anaconda3/envs/crazyflie/lib/python3.7/site-packages/torch/nn/functional.py:1795: UserWarning: nn.functional.tanh is deprecated. Use torch.tanh instead.
  warnings.warn("nn.functional.tanh is deprecated. Use torch.tanh instead.")
/home/jaekyungcho/UMD/gym-pybullet-drones/gym_pybullet_drones/envs/BaseAviary.py:733: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  physicsClientId=self.CLIENT
Episode 500	Average Score: -234.93
^CProcess Process-2:
Process Process-1:
Traceback (most recent call last):
  File "/home/jaekyungcho/anaconda3/envs/crazyflie/lib/python3.7/multiprocessing/process.py", line 297, in _bootstrap
    self.run()
  File "/home/jaekyungcho/anaconda3/envs/crazyflie/lib/python3.7/multiprocessing/process.py", line 99, in run
    self._target(*self._args, **self._kwargs)
  File "/home/jaekyungcho/UMD/sim-to-real-TD3/envs/customEnv.py", line 238, in workerDomainRand
    cmd, data = remote.recv()
  File "/home/jaekyungcho/anaconda3/envs/crazyflie/lib/python3.7/multiprocessing/connection.py", line 250, in recv
    buf = self._recv_bytes()
  File "/home/jaekyungcho/anaconda3/envs/crazyflie/lib/python3.7/multiprocessing/connection.py", line 407, in _recv_bytes
    buf = self._recv(4)
  File "/home/jaekyungcho/anaconda3/envs/crazyflie/lib/python3.7/multiprocessing/connection.py", line 379, in _recv
    chunk = read(handle, remaining)
Traceback (most recent call last):
KeyboardInterrupt
  File "/home/jaekyungcho/anaconda3/envs/crazyflie/lib/python3.7/multiprocessing/process.py", line 297, in _bootstrap
    self.run()
  File "/home/jaekyungcho/anaconda3/envs/crazyflie/lib/python3.7/multiprocessing/process.py", line 99, in run
    self._target(*self._args, **self._kwargs)
  File "/home/jaekyungcho/UMD/sim-to-real-TD3/envs/customEnv.py", line 238, in workerDomainRand
    cmd, data = remote.recv()
  File "/home/jaekyungcho/anaconda3/envs/crazyflie/lib/python3.7/multiprocessing/connection.py", line 250, in recv
    buf = self._recv_bytes()
  File "/home/jaekyungcho/anaconda3/envs/crazyflie/lib/python3.7/multiprocessing/connection.py", line 407, in _recv_bytes
    buf = self._recv(4)
  File "/home/jaekyungcho/anaconda3/envs/crazyflie/lib/python3.7/multiprocessing/connection.py", line 379, in _recv
    chunk = read(handle, remaining)
KeyboardInterrupt
Traceback (most recent call last):
  File "train_td3.py", line 636, in <module>
    hparam = dict([(k,v[0]) for k,v in hparam_set.items()])
  File "train_td3.py", line 332, in train
    if "HER" in args.rnn:
  File "/home/jaekyungcho/UMD/sim-to-real-TD3/td3/td3.py", line 617, in update
    new_action, hidden_out, hidden_all, *_= self.policy_net.evaluate(state, last_action, hidden_in, goal, deterministic, eval_noise_scale=0.0)  # no noise, deterministic policy gradients
  File "/home/jaekyungcho/UMD/sim-to-real-TD3/td3/common/policy_networks.py", line 317, in evaluate
    mean, std, hidden_out, hidden_all = self.forward(state, last_action, hidden_in, goal)
  File "/home/jaekyungcho/UMD/sim-to-real-TD3/td3/common/policy_networks.py", line 294, in forward
    rnn_out, rnn_hidden = self.rnn(rnn_x, hidden_in)
  File "/home/jaekyungcho/anaconda3/envs/crazyflie/lib/python3.7/site-packages/torch/nn/modules/module.py", line 1102, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/jaekyungcho/anaconda3/envs/crazyflie/lib/python3.7/site-packages/torch/nn/modules/rnn.py", line 269, in forward
    self.dropout, self.training, self.bidirectional, self.batch_first)
KeyboardInterrupt
^C(crazyflie) [01;32mjaekyungcho@ubuntu[00m:[01;34m~/UMD/sim-to-real-TD3[00m$ python train_td3.py --env takeoff-aviary-v0 --randomize --tb_log --rrnn RNNHER --gpu 3 --lr_scheduler
pybullet build time: Apr 24 2022 23:58:36
hyperparam set: {'q_lr': 0.0003, 'policy_lr': 3e-05, 'param_lr': 3e-05, 't_max': 50000, 'hidden_dim': 128, 'update_interval': 3, 'lr_scheduler': True}
[Tensorboard log]: tb_log/takeoff-aviary-v0/TD3/randomize/RNNHER/22May13135120
Device: cuda:3
/home/jaekyungcho/anaconda3/envs/crazyflie/lib/python3.7/site-packages/gym/logger.py:34: UserWarning: [33mWARN: Box bound precision lowered by casting to float32[0m
  warnings.warn(colorize("%s: %s" % ("WARN", msg % args), "yellow"))
/home/jaekyungcho/anaconda3/envs/crazyflie/lib/python3.7/site-packages/numpy/core/shape_base.py:420: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  arrays = [asanyarray(arr) for arr in arrays]
/home/jaekyungcho/UMD/gym-pybullet-drones/gym_pybullet_drones/envs/BaseAviary.py:733: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  physicsClientId=self.CLIENT
/home/jaekyungcho/UMD/gym-pybullet-drones/gym_pybullet_drones/envs/BaseAviary.py:733: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  physicsClientId=self.CLIENT
/home/jaekyungcho/anaconda3/envs/crazyflie/lib/python3.7/site-packages/numpy/core/fromnumeric.py:3441: RuntimeWarning: Mean of empty slice.
  out=out, **kwargs)
/home/jaekyungcho/anaconda3/envs/crazyflie/lib/python3.7/site-packages/numpy/core/_methods.py:189: RuntimeWarning: invalid value encountered in double_scalars
  ret = ret.dtype.type(ret / rcount)
/home/jaekyungcho/anaconda3/envs/crazyflie/lib/python3.7/site-packages/torch/nn/functional.py:1795: UserWarning: nn.functional.tanh is deprecated. Use torch.tanh instead.
  warnings.warn("nn.functional.tanh is deprecated. Use torch.tanh instead.")
/home/jaekyungcho/UMD/gym-pybullet-drones/gym_pybullet_drones/envs/BaseAviary.py:733: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  physicsClientId=self.CLIENT
Episode 500	Average Score: -100.25
Episode 1000	Average Score: -23.56
Episode 1500	Average Score: -18.17
Episode 2000	Average Score: -16.68
Episode 2500	Average Score: -22.49
